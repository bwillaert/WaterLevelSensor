;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08/12/2022 20:08:28
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2920      	GOTO       288
_interrupt:
0x0004	0x018A      	CLRF       PCLATH
0x0005	0x0183      	CLRF       STATUS
;WLS3.c,43 :: 		void interrupt(void)
;WLS3.c,46 :: 		if (PIR1.TMR1IF)
0x0006	0x0020      	MOVLB      0
0x0007	0x1C11      	BTFSS      PIR1, 0
0x0008	0x2810      	GOTO       L_interrupt0
;WLS3.c,48 :: 		tmr1_overflow++;
0x0009	0x3001      	MOVLW      1
0x000A	0x07B0      	ADDWF      WLS3_tmr1_overflow, 1
0x000B	0x3000      	MOVLW      0
0x000C	0x3DB1      	ADDWFC     WLS3_tmr1_overflow+1, 1
0x000D	0x3DB2      	ADDWFC     WLS3_tmr1_overflow+2, 1
0x000E	0x3DB3      	ADDWFC     WLS3_tmr1_overflow+3, 1
;WLS3.c,49 :: 		PIR1.TMR1IF = FALSE;
0x000F	0x1011      	BCF        PIR1, 0
;WLS3.c,50 :: 		}
L_interrupt0:
;WLS3.c,51 :: 		}
L_end_interrupt:
L__interrupt12:
0x0010	0x0009      	RETFIE     %s
; end of _interrupt
_UART1_Write:
;__Lib_UART_a01.c,54 :: 		
;__Lib_UART_a01.c,55 :: 		
L_UART1_Write3:
0x0011	0x0023      	MOVLB      3
0x0012	0x189E      	BTFSC      TXSTA, 1
0x0013	0x2816      	GOTO       L_UART1_Write4
;__Lib_UART_a01.c,56 :: 		
0x0014	0x0000      	NOP
0x0015	0x2811      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_a01.c,57 :: 		
0x0016	0x0020      	MOVLB      0
0x0017	0x0843      	MOVF       FARG_UART1_Write_data_, 0
0x0018	0x0023      	MOVLB      3
0x0019	0x009A      	MOVWF      TXREG
;__Lib_UART_a01.c,58 :: 		
L_end_UART1_Write:
0x001A	0x0008      	RETURN
; end of _UART1_Write
_UART1_Tx_Idle:
;__Lib_UART_a01.c,48 :: 		
;__Lib_UART_a01.c,49 :: 		
0x001B	0x3000      	MOVLW      0
0x001C	0x0023      	MOVLB      3
0x001D	0x189E      	BTFSC      TXSTA, 1
0x001E	0x3001      	MOVLW      1
0x001F	0x00F0      	MOVWF      R0
;__Lib_UART_a01.c,50 :: 		
L_end_UART1_Tx_Idle:
0x0020	0x0008      	RETURN
; end of _UART1_Tx_Idle
_sendchar:
;WLS3.c,57 :: 		void sendchar( char c)
;WLS3.c,59 :: 		while (!UART1_Tx_Idle())
L_sendchar1:
0x0021	0x201B      	CALL       _UART1_Tx_Idle
0x0022	0x0870      	MOVF       R0, 0
0x0023	0x1D03      	BTFSS      STATUS, 2
0x0024	0x282B      	GOTO       L_sendchar2
;WLS3.c,61 :: 		Delay_us(100);
0x0025	0x3042      	MOVLW      66
0x0026	0x00FD      	MOVWF      R13
L_sendchar3:
0x0027	0x0BFD      	DECFSZ     R13, 1
0x0028	0x2827      	GOTO       L_sendchar3
0x0029	0x0000      	NOP
;WLS3.c,62 :: 		}
0x002A	0x2821      	GOTO       L_sendchar1
L_sendchar2:
;WLS3.c,63 :: 		UART1_Write(c);
0x002B	0x0020      	MOVLB      0
0x002C	0x0842      	MOVF       FARG_sendchar_c, 0
0x002D	0x00C3      	MOVWF      FARG_UART1_Write_data_
0x002E	0x2011      	CALL       _UART1_Write
;WLS3.c,64 :: 		}
L_end_sendchar:
0x002F	0x0008      	RETURN
; end of _sendchar
_UART1_Init:
;__Lib_UART_a01.c,12 :: 		
;__Lib_UART_a01.c,15 :: 		
0x0030	0x3011      	MOVLW      _UART1_Write
0x0031	0x0020      	MOVLB      0
0x0032	0x00AC      	MOVWF      _UART_Wr_Ptr
0x0033	0x3000      	MOVLW      hi_addr(_UART1_Write)
0x0034	0x00AD      	MOVWF      _UART_Wr_Ptr+1
0x0035	0x3043      	MOVLW      FARG_UART1_Write_data_
0x0036	0x00AE      	MOVWF      _UART_Wr_Ptr+2
0x0037	0x3000      	MOVLW      hi_addr(FARG_UART1_Write_data_)
0x0038	0x00AF      	MOVWF      _UART_Wr_Ptr+3
;__Lib_UART_a01.c,16 :: 		
0x0039	0x30FF      	MOVLW      _UART1_Read
0x003A	0x00B8      	MOVWF      _UART_Rd_Ptr
0x003B	0x30FF      	MOVLW      hi_addr(_UART1_Read)
0x003C	0x00B9      	MOVWF      _UART_Rd_Ptr+1
0x003D	0x3000      	MOVLW      0
0x003E	0x00BA      	MOVWF      _UART_Rd_Ptr+2
0x003F	0x3000      	MOVLW      0
0x0040	0x00BB      	MOVWF      _UART_Rd_Ptr+3
;__Lib_UART_a01.c,17 :: 		
0x0041	0x30FF      	MOVLW      _UART1_Data_Ready
0x0042	0x00B4      	MOVWF      _UART_Rdy_Ptr
0x0043	0x30FF      	MOVLW      hi_addr(_UART1_Data_Ready)
0x0044	0x00B5      	MOVWF      _UART_Rdy_Ptr+1
0x0045	0x3000      	MOVLW      0
0x0046	0x00B6      	MOVWF      _UART_Rdy_Ptr+2
0x0047	0x3000      	MOVLW      0
0x0048	0x00B7      	MOVWF      _UART_Rdy_Ptr+3
;__Lib_UART_a01.c,18 :: 		
0x0049	0x301B      	MOVLW      _UART1_Tx_Idle
0x004A	0x00A8      	MOVWF      _UART_Tx_Idle_Ptr
0x004B	0x3000      	MOVLW      hi_addr(_UART1_Tx_Idle)
0x004C	0x00A9      	MOVWF      _UART_Tx_Idle_Ptr+1
0x004D	0x3000      	MOVLW      0
0x004E	0x00AA      	MOVWF      _UART_Tx_Idle_Ptr+2
0x004F	0x3000      	MOVLW      0
0x0050	0x00AB      	MOVWF      _UART_Tx_Idle_Ptr+3
;__Lib_UART_a01.c,20 :: 		
0x0051	0x0023      	MOVLB      3
0x0052	0x169E      	BSF        TXSTA, 5
;__Lib_UART_a01.c,21 :: 		
0x0053	0x3090      	MOVLW      144
0x0054	0x009D      	MOVWF      RCSTA
;__Lib_UART_a01.c,22 :: 		
0x0055	0x0021      	MOVLB      1
0x0056	0x148C      	BSF        TRISA1_bit, 1
;__Lib_UART_a01.c,23 :: 		
0x0057	0x140C      	BSF        TRISA0_bit, 0
;__Lib_UART_a01.c,24 :: 		
L_UART1_Init0:
0x0058	0x0020      	MOVLB      0
0x0059	0x1E91      	BTFSS      PIR1, 5
0x005A	0x285F      	GOTO       L_UART1_Init1
;__Lib_UART_a01.c,25 :: 		
0x005B	0x0023      	MOVLB      3
0x005C	0x0819      	MOVF       RCREG, 0
0x005D	0x00F0      	MOVWF      R0
0x005E	0x2858      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_a01.c,26 :: 		
L_end_UART1_Init:
0x005F	0x0008      	RETURN
; end of _UART1_Init
_init:
;WLS3.c,99 :: 		void init()
;WLS3.c,102 :: 		OSCCON = 0x70;     // 4x PLL disabled
0x0060	0x3070      	MOVLW      112
0x0061	0x0021      	MOVLB      1
0x0062	0x0099      	MOVWF      OSCCON
;WLS3.c,106 :: 		TRISA.TRISA0 = OUT;  // PIN 7
0x0063	0x100C      	BCF        TRISA, 0
;WLS3.c,107 :: 		PORTA.RA0 = 1;
0x0064	0x0020      	MOVLB      0
0x0065	0x140C      	BSF        PORTA, 0
;WLS3.c,108 :: 		TRISA.TRISA1 = OUT;  // PIN 6
0x0066	0x0021      	MOVLB      1
0x0067	0x108C      	BCF        TRISA, 1
;WLS3.c,109 :: 		PORTA.RA1 = 1;
0x0068	0x0020      	MOVLB      0
0x0069	0x148C      	BSF        PORTA, 1
;WLS3.c,110 :: 		TRISA.TRISA2 = OUT;  // PIN 5
0x006A	0x0021      	MOVLB      1
0x006B	0x110C      	BCF        TRISA, 2
;WLS3.c,111 :: 		PORTA.RA2 = 1;
0x006C	0x0020      	MOVLB      0
0x006D	0x150C      	BSF        PORTA, 2
;WLS3.c,112 :: 		TRISA.TRISA3 = IN;   // PIN 4
0x006E	0x0021      	MOVLB      1
0x006F	0x158C      	BSF        TRISA, 3
;WLS3.c,113 :: 		PORTA.RA3 = 1;
0x0070	0x0020      	MOVLB      0
0x0071	0x158C      	BSF        PORTA, 3
;WLS3.c,114 :: 		TRISA.TRISA4 = IN;   // PIN 3
0x0072	0x0021      	MOVLB      1
0x0073	0x160C      	BSF        TRISA, 4
;WLS3.c,115 :: 		PORTA.RA4 = 1;
0x0074	0x0020      	MOVLB      0
0x0075	0x160C      	BSF        PORTA, 4
;WLS3.c,116 :: 		TRISA.TRISA5 = OUT;  // PIN 2
0x0076	0x0021      	MOVLB      1
0x0077	0x128C      	BCF        TRISA, 5
;WLS3.c,117 :: 		PORTA.RA5 = 1;
0x0078	0x0020      	MOVLB      0
0x0079	0x168C      	BSF        PORTA, 5
;WLS3.c,120 :: 		ANSELA.ANSA4 = 1;     // PIN 3 CPS3
0x007A	0x0023      	MOVLB      3
0x007B	0x160C      	BSF        ANSELA, 4
;WLS3.c,123 :: 		CPSCON0.CPSRM = 0;    // Low range - internal voltage reference
0x007C	0x0020      	MOVLB      0
0x007D	0x131E      	BCF        CPSCON0, 6
;WLS3.c,124 :: 		CPSCON0.CPSRNG0 = 0;  // oscillator medium range
0x007E	0x111E      	BCF        CPSCON0, 2
;WLS3.c,125 :: 		CPSCON0.CPSRNG1 = 1;
0x007F	0x159E      	BSF        CPSCON0, 3
;WLS3.c,126 :: 		CPSCON0.CPSON = 1;
0x0080	0x179E      	BSF        CPSCON0, 7
;WLS3.c,127 :: 		CPSCON1.CPSCH0 = 1;   // Channel 3 = PIN 3
0x0081	0x141F      	BSF        CPSCON1, 0
;WLS3.c,128 :: 		CPSCON1.CPSCH1 = 1;
0x0082	0x149F      	BSF        CPSCON1, 1
;WLS3.c,131 :: 		T1CON.TMR1CS0 = 1;    // TMR1 clock = capacitive oscillator
0x0083	0x1718      	BSF        T1CON, 6
;WLS3.c,132 :: 		T1CON.TMR1CS1 = 1;    // TMR1 clock = capacitive oscillator
0x0084	0x1798      	BSF        T1CON, 7
;WLS3.c,133 :: 		PIE1.TMR1IE = 1;      // Enable TMR1 interrupt
0x0085	0x0021      	MOVLB      1
0x0086	0x1411      	BSF        PIE1, 0
;WLS3.c,136 :: 		UART1_Init(9600);
0x0087	0x0023      	MOVLB      3
0x0088	0x159F      	BSF        BAUDCON, 3
0x0089	0x30CF      	MOVLW      207
0x008A	0x009B      	MOVWF      SPBRG
0x008B	0x019C      	CLRF       SPBRG+1
0x008C	0x151E      	BSF        TXSTA, 2
0x008D	0x2030      	CALL       _UART1_Init
;WLS3.c,139 :: 		INTCON.PEIE = 1;
0x008E	0x170B      	BSF        INTCON, 6
;WLS3.c,140 :: 		INTCON.GIE = 1;
0x008F	0x178B      	BSF        INTCON, 7
;WLS3.c,141 :: 		}
L_end_init:
0x0090	0x0008      	RETURN
; end of _init
_measure_frequency:
;WLS3.c,85 :: 		unsigned long measure_frequency()
;WLS3.c,87 :: 		T1CON.TMR1ON = 0;
0x0091	0x0020      	MOVLB      0
0x0092	0x1018      	BCF        T1CON, 0
;WLS3.c,88 :: 		tmr1_overflow = 0;
0x0093	0x01B0      	CLRF       WLS3_tmr1_overflow
0x0094	0x01B1      	CLRF       WLS3_tmr1_overflow+1
0x0095	0x01B2      	CLRF       WLS3_tmr1_overflow+2
0x0096	0x01B3      	CLRF       WLS3_tmr1_overflow+3
;WLS3.c,89 :: 		TMR1L = 0;
0x0097	0x0196      	CLRF       TMR1L
;WLS3.c,90 :: 		TMR1H = 0;
0x0098	0x0197      	CLRF       TMR1H
;WLS3.c,91 :: 		T1CON.TMR1ON = 1;
0x0099	0x1418      	BSF        T1CON, 0
;WLS3.c,92 :: 		Delay_ms(1000);
0x009A	0x300B      	MOVLW      11
0x009B	0x00FB      	MOVWF      R11
0x009C	0x3026      	MOVLW      38
0x009D	0x00FC      	MOVWF      R12
0x009E	0x305D      	MOVLW      93
0x009F	0x00FD      	MOVWF      R13
L_measure_frequency7:
0x00A0	0x0BFD      	DECFSZ     R13, 1
0x00A1	0x28A0      	GOTO       L_measure_frequency7
0x00A2	0x0BFC      	DECFSZ     R12, 1
0x00A3	0x28A0      	GOTO       L_measure_frequency7
0x00A4	0x0BFB      	DECFSZ     R11, 1
0x00A5	0x28A0      	GOTO       L_measure_frequency7
0x00A6	0x0000      	NOP
0x00A7	0x0000      	NOP
;WLS3.c,93 :: 		T1CON.TMR1ON = 0;
0x00A8	0x1018      	BCF        T1CON, 0
;WLS3.c,94 :: 		pulse_count = (tmr1_overflow << 16) + (TMR1H << 8) + TMR1L;
0x00A9	0x0831      	MOVF       WLS3_tmr1_overflow+1, 0
0x00AA	0x00F7      	MOVWF      R7
0x00AB	0x0830      	MOVF       WLS3_tmr1_overflow, 0
0x00AC	0x00F6      	MOVWF      R6
0x00AD	0x01F4      	CLRF       R4
0x00AE	0x01F5      	CLRF       R5
0x00AF	0x0817      	MOVF       TMR1H, 0
0x00B0	0x00F1      	MOVWF      R1
0x00B1	0x01F0      	CLRF       R0
0x00B2	0x0874      	MOVF       R4, 0
0x00B3	0x07F0      	ADDWF      R0, 1
0x00B4	0x0875      	MOVF       R5, 0
0x00B5	0x3DF1      	ADDWFC     R1, 1
0x00B6	0x0876      	MOVF       R6, 0
0x00B7	0x3DF2      	ADDWFC     R2, 1
0x00B8	0x0877      	MOVF       R7, 0
0x00B9	0x3DF3      	ADDWFC     R3, 1
0x00BA	0x0816      	MOVF       TMR1L, 0
0x00BB	0x07F0      	ADDWF      R0, 1
0x00BC	0x3000      	MOVLW      0
0x00BD	0x3DF1      	ADDWFC     R1, 1
0x00BE	0x3DF2      	ADDWFC     R2, 1
0x00BF	0x3DF3      	ADDWFC     R3, 1
0x00C0	0x0870      	MOVF       R0, 0
0x00C1	0x00A0      	MOVWF      WLS3_pulse_count
0x00C2	0x0871      	MOVF       R1, 0
0x00C3	0x00A1      	MOVWF      WLS3_pulse_count+1
0x00C4	0x0872      	MOVF       R2, 0
0x00C5	0x00A2      	MOVWF      WLS3_pulse_count+2
0x00C6	0x0873      	MOVF       R3, 0
0x00C7	0x00A3      	MOVWF      WLS3_pulse_count+3
;WLS3.c,95 :: 		return pulse_count;
;WLS3.c,96 :: 		}
L_end_measure_frequency:
0x00C8	0x0008      	RETURN
; end of _measure_frequency
_sendhex:
;WLS3.c,69 :: 		void sendhex(unsigned long hexnumber)
;WLS3.c,71 :: 		int nibble = 0;
0x00C9	0x0020      	MOVLB      0
0x00CA	0x01C0      	CLRF       sendhex_nibble_L0
0x00CB	0x01C1      	CLRF       sendhex_nibble_L0+1
;WLS3.c,75 :: 		sendchar(STX);
0x00CC	0x3002      	MOVLW      2
0x00CD	0x00C2      	MOVWF      FARG_sendchar_c
0x00CE	0x2021      	CALL       _sendchar
;WLS3.c,77 :: 		for (nibble = 0; nibble < 8; nibble++)
0x00CF	0x0020      	MOVLB      0
0x00D0	0x01C0      	CLRF       sendhex_nibble_L0
0x00D1	0x01C1      	CLRF       sendhex_nibble_L0+1
L_sendhex4:
0x00D2	0x3080      	MOVLW      128
0x00D3	0x0641      	XORWF      sendhex_nibble_L0+1, 0
0x00D4	0x00F0      	MOVWF      R0
0x00D5	0x3080      	MOVLW      128
0x00D6	0x0270      	SUBWF      R0, 0
0x00D7	0x1D03      	BTFSS      STATUS, 2
0x00D8	0x28DB      	GOTO       L__sendhex15
0x00D9	0x3008      	MOVLW      8
0x00DA	0x0240      	SUBWF      sendhex_nibble_L0, 0
L__sendhex15:
0x00DB	0x1803      	BTFSC      STATUS, 0
0x00DC	0x2916      	GOTO       L_sendhex5
;WLS3.c,79 :: 		sendchar(hexnr[(hexnumber&0xF0000000)>>28]);
0x00DD	0x3000      	MOVLW      0
0x00DE	0x053C      	ANDWF      FARG_sendhex_hexnumber, 0
0x00DF	0x00F5      	MOVWF      R5
0x00E0	0x3000      	MOVLW      0
0x00E1	0x053D      	ANDWF      FARG_sendhex_hexnumber+1, 0
0x00E2	0x00F6      	MOVWF      R6
0x00E3	0x3000      	MOVLW      0
0x00E4	0x053E      	ANDWF      FARG_sendhex_hexnumber+2, 0
0x00E5	0x00F7      	MOVWF      R7
0x00E6	0x30F0      	MOVLW      240
0x00E7	0x053F      	ANDWF      FARG_sendhex_hexnumber+3, 0
0x00E8	0x00F8      	MOVWF      R8
0x00E9	0x301C      	MOVLW      28
0x00EA	0x00F4      	MOVWF      R4
0x00EB	0x0875      	MOVF       R5, 0
0x00EC	0x00F0      	MOVWF      R0
0x00ED	0x0876      	MOVF       R6, 0
0x00EE	0x00F1      	MOVWF      R1
0x00EF	0x0877      	MOVF       R7, 0
0x00F0	0x00F2      	MOVWF      R2
0x00F1	0x0878      	MOVF       R8, 0
0x00F2	0x00F3      	MOVWF      R3
0x00F3	0x0874      	MOVF       R4, 0
L__sendhex16:
0x00F4	0x1903      	BTFSC      STATUS, 2
0x00F5	0x28FC      	GOTO       L__sendhex17
0x00F6	0x36F3      	LSRF       R3, 1
0x00F7	0x0CF2      	RRF        R2, 1
0x00F8	0x0CF1      	RRF        R1, 1
0x00F9	0x0CF0      	RRF        R0, 1
0x00FA	0x3EFF      	ADDLW      255
0x00FB	0x28F4      	GOTO       L__sendhex16
L__sendhex17:
0x00FC	0x3048      	MOVLW      sendhex_hexnr_L0
0x00FD	0x0770      	ADDWF      R0, 0
0x00FE	0x0084      	MOVWF      FSR0
0x00FF	0x3081      	MOVLW      hi_addr(sendhex_hexnr_L0)
0x0100	0x3D71      	ADDWFC     R1, 0
0x0101	0x0085      	MOVWF      FSR0H
0x0102	0x0800      	MOVF       INDF0, 0
0x0103	0x00C2      	MOVWF      FARG_sendchar_c
0x0104	0x2021      	CALL       _sendchar
;WLS3.c,80 :: 		hexnumber<<=4;
0x0105	0x3004      	MOVLW      4
0x0106	0x00F0      	MOVWF      R0
0x0107	0x0870      	MOVF       R0, 0
L__sendhex18:
0x0108	0x1903      	BTFSC      STATUS, 2
0x0109	0x2911      	GOTO       L__sendhex19
0x010A	0x0020      	MOVLB      0
0x010B	0x35BC      	LSLF       FARG_sendhex_hexnumber, 1
0x010C	0x0DBD      	RLF        FARG_sendhex_hexnumber+1, 1
0x010D	0x0DBE      	RLF        FARG_sendhex_hexnumber+2, 1
0x010E	0x0DBF      	RLF        FARG_sendhex_hexnumber+3, 1
0x010F	0x3EFF      	ADDLW      255
0x0110	0x2908      	GOTO       L__sendhex18
L__sendhex19:
0x0111	0x0020      	MOVLB      0
;WLS3.c,77 :: 		for (nibble = 0; nibble < 8; nibble++)
0x0112	0x0AC0      	INCF       sendhex_nibble_L0, 1
0x0113	0x1903      	BTFSC      STATUS, 2
0x0114	0x0AC1      	INCF       sendhex_nibble_L0+1, 1
;WLS3.c,81 :: 		}
0x0115	0x28D2      	GOTO       L_sendhex4
L_sendhex5:
;WLS3.c,82 :: 		}
L_end_sendhex:
0x0116	0x0008      	RETURN
; end of _sendhex
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x0117	0x0012      	MOVIW      0, 2
;__Lib_System.c,75 :: 		
0x0118	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x0119	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x011A	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x011B	0x2917      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x011C	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x011D	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x011E	0x2917      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x011F	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0120	0x0020      	MOVLB      0
0x0121	0x01A0      	CLRF       WLS3_pulse_count
0x0122	0x01A1      	CLRF       33
0x0123	0x01A2      	CLRF       34
0x0124	0x01A3      	CLRF       35
;WLS3.c,148 :: 		void main()
;WLS3.c,151 :: 		init();
0x0125	0x2060      	CALL       _init
;WLS3.c,154 :: 		Delay_ms(1000);
0x0126	0x300B      	MOVLW      11
0x0127	0x00FB      	MOVWF      R11
0x0128	0x3026      	MOVLW      38
0x0129	0x00FC      	MOVWF      R12
0x012A	0x305D      	MOVLW      93
0x012B	0x00FD      	MOVWF      R13
L_main8:
0x012C	0x0BFD      	DECFSZ     R13, 1
0x012D	0x292C      	GOTO       L_main8
0x012E	0x0BFC      	DECFSZ     R12, 1
0x012F	0x292C      	GOTO       L_main8
0x0130	0x0BFB      	DECFSZ     R11, 1
0x0131	0x292C      	GOTO       L_main8
0x0132	0x0000      	NOP
0x0133	0x0000      	NOP
;WLS3.c,157 :: 		while(1)
L_main9:
;WLS3.c,160 :: 		frequency = measure_frequency();
0x0134	0x2091      	CALL       _measure_frequency
0x0135	0x0870      	MOVF       R0, 0
0x0136	0x00A4      	MOVWF      WLS3_frequency
0x0137	0x0871      	MOVF       R1, 0
0x0138	0x00A5      	MOVWF      WLS3_frequency+1
0x0139	0x0872      	MOVF       R2, 0
0x013A	0x00A6      	MOVWF      WLS3_frequency+2
0x013B	0x0873      	MOVF       R3, 0
0x013C	0x00A7      	MOVWF      WLS3_frequency+3
;WLS3.c,163 :: 		sendhex(frequency);
0x013D	0x0870      	MOVF       R0, 0
0x013E	0x00BC      	MOVWF      FARG_sendhex_hexnumber
0x013F	0x0871      	MOVF       R1, 0
0x0140	0x00BD      	MOVWF      FARG_sendhex_hexnumber+1
0x0141	0x0872      	MOVF       R2, 0
0x0142	0x00BE      	MOVWF      FARG_sendhex_hexnumber+2
0x0143	0x0873      	MOVF       R3, 0
0x0144	0x00BF      	MOVWF      FARG_sendhex_hexnumber+3
0x0145	0x20C9      	CALL       _sendhex
;WLS3.c,164 :: 		}
0x0146	0x2934      	GOTO       L_main9
;WLS3.c,165 :: 		}
L_end_main:
0x0147	0x2947      	GOTO       $+0
; end of _main
;WLS3.c,72 :: sendhex_hexnr_L0
0x0148	0x3430 ;sendhex_hexnr_L0+0
0x0149	0x3431 ;sendhex_hexnr_L0+1
0x014A	0x3432 ;sendhex_hexnr_L0+2
0x014B	0x3433 ;sendhex_hexnr_L0+3
0x014C	0x3434 ;sendhex_hexnr_L0+4
0x014D	0x3435 ;sendhex_hexnr_L0+5
0x014E	0x3436 ;sendhex_hexnr_L0+6
0x014F	0x3437 ;sendhex_hexnr_L0+7
0x0150	0x3438 ;sendhex_hexnr_L0+8
0x0151	0x3439 ;sendhex_hexnr_L0+9
0x0152	0x3441 ;sendhex_hexnr_L0+10
0x0153	0x3442 ;sendhex_hexnr_L0+11
0x0154	0x3443 ;sendhex_hexnr_L0+12
0x0155	0x3444 ;sendhex_hexnr_L0+13
0x0156	0x3445 ;sendhex_hexnr_L0+14
0x0157	0x3446 ;sendhex_hexnr_L0+15
; end of sendhex_hexnr_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [13]    _interrupt
0x0011      [10]    _UART1_Write
0x001B       [6]    _UART1_Tx_Idle
0x0021      [15]    _sendchar
0x0030      [48]    _UART1_Init
0x0060      [49]    _init
0x0091      [56]    _measure_frequency
0x00C9      [78]    _sendhex
0x0117       [9]    ___CC2DW
0x0120      [40]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PORTA
0x0011       [1]    PIR1
0x0016       [1]    TMR1L
0x0017       [1]    TMR1H
0x0018       [1]    T1CON
0x001E       [1]    CPSCON0
0x001F       [1]    CPSCON1
0x0020       [4]    WLS3_pulse_count
0x0024       [4]    WLS3_frequency
0x0028       [4]    _UART_Tx_Idle_Ptr
0x002C       [4]    _UART_Wr_Ptr
0x0030       [4]    WLS3_tmr1_overflow
0x0034       [4]    _UART_Rdy_Ptr
0x0038       [4]    _UART_Rd_Ptr
0x003C       [4]    FARG_sendhex_hexnumber
0x0040       [2]    sendhex_nibble_L0
0x0042       [1]    FARG_sendchar_c
0x0043       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008C       [0]    TRISA0_bit
0x008C       [0]    TRISA1_bit
0x008C       [1]    TRISA
0x0091       [1]    PIE1
0x0099       [1]    OSCCON
0x018C       [1]    ANSELA
0x0199       [1]    RCREG
0x019A       [1]    TXREG
0x019B       [2]    SPBRG
0x019C       [1]    SPBRGH
0x019D       [1]    RCSTA
0x019E       [1]    TXSTA
0x019F       [1]    BAUDCON
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0148      [16]    sendhex_hexnr_L0
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_sendchar1
  L_sendchar2
  L_sendchar3
  L_sendhex4
  L_sendhex5
  L_sendhex6
  L_measure_frequency7
  L_main8
  L_main9
  L_main10
  L_end_interrupt
  _interrupt
  L__interrupt12
  L_end_sendchar
  _sendchar
  L_end_sendhex
  _sendhex
  L__sendhex15
  L__sendhex16
  L__sendhex17
  L__sendhex18
  L__sendhex19
  L_end_measure_frequency
  _measure_frequency
  L_end_init
  _init
  L_end_main
  _main
  L_CA2A_Loop
  L_CA2AW_Loop
  L_CS2S_Loop
  L_CS2S_End
  L_FZinS_Loop
  L_FZinS_End
  _CC2D_Loop1
  _CC2DL_Loop1
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2A
  ___CA2A
  L_end___CA2AW
  ___CA2AW
  L_end___CS2S
  ___CS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_interrupt0
  L_sendchar1
  L_sendchar2
  L_sendchar3
  L_sendhex4
  L_sendhex5
  L_sendhex6
  L_measure_frequency7
  L_main8
  L_main9
  L_main10
  L_end_interrupt
  _interrupt
  L__interrupt12
  L_end_sendchar
  _sendchar
  L_end_sendhex
  _sendhex
  L__sendhex15
  L__sendhex16
  L__sendhex17
  L__sendhex18
  L__sendhex19
  L_end_measure_frequency
  _measure_frequency
  L_end_init
  _init
  L_end_main
  _main
