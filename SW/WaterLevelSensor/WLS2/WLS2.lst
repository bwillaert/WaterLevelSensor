;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/11/2022 20:07:22
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28D3      	GOTO       211
_interrupt:
0x0004	0x018A      	CLRF       PCLATH
0x0005	0x0183      	CLRF       STATUS
;WLS2.c,42 :: 		void interrupt(void)
;WLS2.c,46 :: 		if (PIR2.C1IF)
0x0006	0x0020      	MOVLB      0
0x0007	0x1E92      	BTFSS      PIR2, 5
0x0008	0x2810      	GOTO       L_interrupt0
;WLS2.c,48 :: 		actual_nr_pulses++;
0x0009	0x3001      	MOVLW      1
0x000A	0x07A0      	ADDWF      WLS2_actual_nr_pulses, 1
0x000B	0x3000      	MOVLW      0
0x000C	0x3DA1      	ADDWFC     WLS2_actual_nr_pulses+1, 1
0x000D	0x3DA2      	ADDWFC     WLS2_actual_nr_pulses+2, 1
0x000E	0x3DA3      	ADDWFC     WLS2_actual_nr_pulses+3, 1
;WLS2.c,49 :: 		PIR2.C1IF = FALSE;
0x000F	0x1292      	BCF        PIR2, 5
;WLS2.c,50 :: 		}
L_interrupt0:
;WLS2.c,52 :: 		}
L_end_interrupt:
L__interrupt11:
0x0010	0x0009      	RETFIE     %s
; end of _interrupt
_UART1_Write:
;__Lib_UART_a01.c,54 :: 		
;__Lib_UART_a01.c,55 :: 		
L_UART1_Write3:
0x0011	0x0023      	MOVLB      3
0x0012	0x189E      	BTFSC      TXSTA, 1
0x0013	0x2816      	GOTO       L_UART1_Write4
;__Lib_UART_a01.c,56 :: 		
0x0014	0x0000      	NOP
0x0015	0x2811      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_a01.c,57 :: 		
0x0016	0x0020      	MOVLB      0
0x0017	0x082F      	MOVF       FARG_UART1_Write_data_, 0
0x0018	0x0023      	MOVLB      3
0x0019	0x009A      	MOVWF      TXREG
;__Lib_UART_a01.c,58 :: 		
L_end_UART1_Write:
0x001A	0x0008      	RETURN
; end of _UART1_Write
_UART1_Tx_Idle:
;__Lib_UART_a01.c,48 :: 		
;__Lib_UART_a01.c,49 :: 		
0x001B	0x3000      	MOVLW      0
0x001C	0x0023      	MOVLB      3
0x001D	0x189E      	BTFSC      TXSTA, 1
0x001E	0x3001      	MOVLW      1
0x001F	0x00F0      	MOVWF      R0
;__Lib_UART_a01.c,50 :: 		
L_end_UART1_Tx_Idle:
0x0020	0x0008      	RETURN
; end of _UART1_Tx_Idle
_sendchar:
;WLS2.c,58 :: 		void sendchar( char c)
;WLS2.c,60 :: 		while (!UART1_Tx_Idle())
L_sendchar1:
0x0021	0x201B      	CALL       _UART1_Tx_Idle
0x0022	0x0870      	MOVF       R0, 0
0x0023	0x1D03      	BTFSS      STATUS, 2
0x0024	0x282B      	GOTO       L_sendchar2
;WLS2.c,62 :: 		Delay_us(100);
0x0025	0x3042      	MOVLW      66
0x0026	0x00FD      	MOVWF      R13
L_sendchar3:
0x0027	0x0BFD      	DECFSZ     R13, 1
0x0028	0x2827      	GOTO       L_sendchar3
0x0029	0x0000      	NOP
;WLS2.c,63 :: 		}
0x002A	0x2821      	GOTO       L_sendchar1
L_sendchar2:
;WLS2.c,64 :: 		UART1_Write(c);
0x002B	0x0020      	MOVLB      0
0x002C	0x082E      	MOVF       FARG_sendchar_c, 0
0x002D	0x00AF      	MOVWF      FARG_UART1_Write_data_
0x002E	0x2011      	CALL       _UART1_Write
;WLS2.c,65 :: 		}
L_end_sendchar:
0x002F	0x0008      	RETURN
; end of _sendchar
_measure_frequency:
;WLS2.c,84 :: 		unsigned long measure_frequency()
;WLS2.c,86 :: 		actual_nr_pulses =0;
0x0030	0x0020      	MOVLB      0
0x0031	0x01A0      	CLRF       WLS2_actual_nr_pulses
0x0032	0x01A1      	CLRF       WLS2_actual_nr_pulses+1
0x0033	0x01A2      	CLRF       WLS2_actual_nr_pulses+2
0x0034	0x01A3      	CLRF       WLS2_actual_nr_pulses+3
;WLS2.c,87 :: 		Delay_ms(1000);
0x0035	0x300B      	MOVLW      11
0x0036	0x00FB      	MOVWF      R11
0x0037	0x3026      	MOVLW      38
0x0038	0x00FC      	MOVWF      R12
0x0039	0x305D      	MOVLW      93
0x003A	0x00FD      	MOVWF      R13
L_measure_frequency7:
0x003B	0x0BFD      	DECFSZ     R13, 1
0x003C	0x283B      	GOTO       L_measure_frequency7
0x003D	0x0BFC      	DECFSZ     R12, 1
0x003E	0x283B      	GOTO       L_measure_frequency7
0x003F	0x0BFB      	DECFSZ     R11, 1
0x0040	0x283B      	GOTO       L_measure_frequency7
0x0041	0x0000      	NOP
0x0042	0x0000      	NOP
;WLS2.c,88 :: 		return actual_nr_pulses;
0x0043	0x0820      	MOVF       WLS2_actual_nr_pulses, 0
0x0044	0x00F0      	MOVWF      R0
0x0045	0x0821      	MOVF       WLS2_actual_nr_pulses+1, 0
0x0046	0x00F1      	MOVWF      R1
0x0047	0x0822      	MOVF       WLS2_actual_nr_pulses+2, 0
0x0048	0x00F2      	MOVWF      R2
0x0049	0x0823      	MOVF       WLS2_actual_nr_pulses+3, 0
0x004A	0x00F3      	MOVWF      R3
;WLS2.c,89 :: 		}
L_end_measure_frequency:
0x004B	0x0008      	RETURN
; end of _measure_frequency
_sendhex:
;WLS2.c,70 :: 		void sendhex(unsigned long hexnumber)
;WLS2.c,72 :: 		int nibble = 0;
0x004C	0x0020      	MOVLB      0
0x004D	0x01AC      	CLRF       sendhex_nibble_L0
0x004E	0x01AD      	CLRF       sendhex_nibble_L0+1
;WLS2.c,75 :: 		sendchar('\n');
0x004F	0x300A      	MOVLW      10
0x0050	0x00AE      	MOVWF      FARG_sendchar_c
0x0051	0x2021      	CALL       _sendchar
;WLS2.c,76 :: 		for (nibble = 0; nibble < 8; nibble++)
0x0052	0x0020      	MOVLB      0
0x0053	0x01AC      	CLRF       sendhex_nibble_L0
0x0054	0x01AD      	CLRF       sendhex_nibble_L0+1
L_sendhex4:
0x0055	0x3080      	MOVLW      128
0x0056	0x062D      	XORWF      sendhex_nibble_L0+1, 0
0x0057	0x00F0      	MOVWF      R0
0x0058	0x3080      	MOVLW      128
0x0059	0x0270      	SUBWF      R0, 0
0x005A	0x1D03      	BTFSS      STATUS, 2
0x005B	0x285E      	GOTO       L__sendhex14
0x005C	0x3008      	MOVLW      8
0x005D	0x022C      	SUBWF      sendhex_nibble_L0, 0
L__sendhex14:
0x005E	0x1803      	BTFSC      STATUS, 0
0x005F	0x2899      	GOTO       L_sendhex5
;WLS2.c,78 :: 		sendchar(hexnr[(hexnumber&0xF0000000)>>28]);
0x0060	0x3000      	MOVLW      0
0x0061	0x0528      	ANDWF      FARG_sendhex_hexnumber, 0
0x0062	0x00F5      	MOVWF      R5
0x0063	0x3000      	MOVLW      0
0x0064	0x0529      	ANDWF      FARG_sendhex_hexnumber+1, 0
0x0065	0x00F6      	MOVWF      R6
0x0066	0x3000      	MOVLW      0
0x0067	0x052A      	ANDWF      FARG_sendhex_hexnumber+2, 0
0x0068	0x00F7      	MOVWF      R7
0x0069	0x30F0      	MOVLW      240
0x006A	0x052B      	ANDWF      FARG_sendhex_hexnumber+3, 0
0x006B	0x00F8      	MOVWF      R8
0x006C	0x301C      	MOVLW      28
0x006D	0x00F4      	MOVWF      R4
0x006E	0x0875      	MOVF       R5, 0
0x006F	0x00F0      	MOVWF      R0
0x0070	0x0876      	MOVF       R6, 0
0x0071	0x00F1      	MOVWF      R1
0x0072	0x0877      	MOVF       R7, 0
0x0073	0x00F2      	MOVWF      R2
0x0074	0x0878      	MOVF       R8, 0
0x0075	0x00F3      	MOVWF      R3
0x0076	0x0874      	MOVF       R4, 0
L__sendhex15:
0x0077	0x1903      	BTFSC      STATUS, 2
0x0078	0x287F      	GOTO       L__sendhex16
0x0079	0x36F3      	LSRF       R3, 1
0x007A	0x0CF2      	RRF        R2, 1
0x007B	0x0CF1      	RRF        R1, 1
0x007C	0x0CF0      	RRF        R0, 1
0x007D	0x3EFF      	ADDLW      255
0x007E	0x2877      	GOTO       L__sendhex15
L__sendhex16:
0x007F	0x30E8      	MOVLW      sendhex_hexnr_L0
0x0080	0x0770      	ADDWF      R0, 0
0x0081	0x0084      	MOVWF      FSR0
0x0082	0x3080      	MOVLW      hi_addr(sendhex_hexnr_L0)
0x0083	0x3D71      	ADDWFC     R1, 0
0x0084	0x0085      	MOVWF      FSR0H
0x0085	0x0800      	MOVF       INDF0, 0
0x0086	0x00AE      	MOVWF      FARG_sendchar_c
0x0087	0x2021      	CALL       _sendchar
;WLS2.c,79 :: 		hexnumber<<=4;
0x0088	0x3004      	MOVLW      4
0x0089	0x00F0      	MOVWF      R0
0x008A	0x0870      	MOVF       R0, 0
L__sendhex17:
0x008B	0x1903      	BTFSC      STATUS, 2
0x008C	0x2894      	GOTO       L__sendhex18
0x008D	0x0020      	MOVLB      0
0x008E	0x35A8      	LSLF       FARG_sendhex_hexnumber, 1
0x008F	0x0DA9      	RLF        FARG_sendhex_hexnumber+1, 1
0x0090	0x0DAA      	RLF        FARG_sendhex_hexnumber+2, 1
0x0091	0x0DAB      	RLF        FARG_sendhex_hexnumber+3, 1
0x0092	0x3EFF      	ADDLW      255
0x0093	0x288B      	GOTO       L__sendhex17
L__sendhex18:
0x0094	0x0020      	MOVLB      0
;WLS2.c,76 :: 		for (nibble = 0; nibble < 8; nibble++)
0x0095	0x0AAC      	INCF       sendhex_nibble_L0, 1
0x0096	0x1903      	BTFSC      STATUS, 2
0x0097	0x0AAD      	INCF       sendhex_nibble_L0+1, 1
;WLS2.c,80 :: 		}
0x0098	0x2855      	GOTO       L_sendhex4
L_sendhex5:
;WLS2.c,81 :: 		}
L_end_sendhex:
0x0099	0x0008      	RETURN
; end of _sendhex
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x009A	0x0012      	MOVIW      0, 2
;__Lib_System.c,75 :: 		
0x009B	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x009C	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x009D	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x009E	0x289A      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x009F	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x00A0	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x00A1	0x289A      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x00A2	0x0008      	RETURN
; end of ___CC2DW
_init:
;WLS2.c,93 :: 		void init()
;WLS2.c,96 :: 		OSCCON = 0xF0;
0x00A3	0x30F0      	MOVLW      240
0x00A4	0x0021      	MOVLB      1
0x00A5	0x0099      	MOVWF      OSCCON
;WLS2.c,100 :: 		TRISA.TRISA0 = OUT;  // PIN 7
0x00A6	0x100C      	BCF        TRISA, 0
;WLS2.c,101 :: 		PORTA.RA0 = 1;
0x00A7	0x0020      	MOVLB      0
0x00A8	0x140C      	BSF        PORTA, 0
;WLS2.c,102 :: 		TRISA.TRISA1 = OUT;  // PIN 6
0x00A9	0x0021      	MOVLB      1
0x00AA	0x108C      	BCF        TRISA, 1
;WLS2.c,103 :: 		PORTA.RA1 = 1;
0x00AB	0x0020      	MOVLB      0
0x00AC	0x148C      	BSF        PORTA, 1
;WLS2.c,104 :: 		TRISA.TRISA2 = OUT;  // PIN 5
0x00AD	0x0021      	MOVLB      1
0x00AE	0x110C      	BCF        TRISA, 2
;WLS2.c,105 :: 		PORTA.RA2 = 1;
0x00AF	0x0020      	MOVLB      0
0x00B0	0x150C      	BSF        PORTA, 2
;WLS2.c,106 :: 		TRISA.TRISA3 = IN;   // PIN 4
0x00B1	0x0021      	MOVLB      1
0x00B2	0x158C      	BSF        TRISA, 3
;WLS2.c,107 :: 		PORTA.RA3 = 1;
0x00B3	0x0020      	MOVLB      0
0x00B4	0x158C      	BSF        PORTA, 3
;WLS2.c,108 :: 		TRISA.TRISA4 = IN;   // PIN 3
0x00B5	0x0021      	MOVLB      1
0x00B6	0x160C      	BSF        TRISA, 4
;WLS2.c,109 :: 		PORTA.RA4 = 1;
0x00B7	0x0020      	MOVLB      0
0x00B8	0x160C      	BSF        PORTA, 4
;WLS2.c,110 :: 		TRISA.TRISA5 = OUT;  // PIN 2
0x00B9	0x0021      	MOVLB      1
0x00BA	0x128C      	BCF        TRISA, 5
;WLS2.c,111 :: 		PORTA.RA5 = 1;
0x00BB	0x0020      	MOVLB      0
0x00BC	0x168C      	BSF        PORTA, 5
;WLS2.c,115 :: 		ANSELA.ANSA4 = 1;     // comparator-
0x00BD	0x0023      	MOVLB      3
0x00BE	0x160C      	BSF        ANSELA, 4
;WLS2.c,121 :: 		CM1CON0.C1POL = 0;      // comp output polarity is not inverted
0x00BF	0x0022      	MOVLB      2
0x00C0	0x1211      	BCF        CM1CON0, 4
;WLS2.c,122 :: 		CM1CON0.C1OE = 1;       // comp output enabled
0x00C1	0x1691      	BSF        CM1CON0, 5
;WLS2.c,123 :: 		CM1CON0.C1SP = 1;       // high speed
0x00C2	0x1511      	BSF        CM1CON0, 2
;WLS2.c,124 :: 		CM1CON0.C1ON = 1;       // comp is enabled
0x00C3	0x1791      	BSF        CM1CON0, 7
;WLS2.c,125 :: 		CM1CON0.C1HYS = 1;      // hysteresis enabled
0x00C4	0x1491      	BSF        CM1CON0, 1
;WLS2.c,126 :: 		CM1CON0.C1SYNC = 0;     // comp output synchronous with timer 1
0x00C5	0x1011      	BCF        CM1CON0, 0
;WLS2.c,128 :: 		CM1CON1.C1NCH = 1;      // C1IN1-
0x00C6	0x1412      	BSF        CM1CON1, 0
;WLS2.c,129 :: 		CM1CON1.C1PCH0 = 0;     // comparator + Fixed Voltage Reference
0x00C7	0x1212      	BCF        CM1CON1, 4
;WLS2.c,130 :: 		CM1CON1.C1PCH1 = 1;     // comparator + Fixed Voltage Reference
0x00C8	0x1692      	BSF        CM1CON1, 5
;WLS2.c,131 :: 		CM1CON1.C1INTP = 1;     // comparator interrupt on positive edge
0x00C9	0x1792      	BSF        CM1CON1, 7
;WLS2.c,132 :: 		CM1CON1.C1INTN = 0;
0x00CA	0x1312      	BCF        CM1CON1, 6
;WLS2.c,133 :: 		PIE2.C1IE = 1;          // comparator 1 interrupt enabled
0x00CB	0x0021      	MOVLB      1
0x00CC	0x1692      	BSF        PIE2, 5
;WLS2.c,136 :: 		FVRCON.FVREN = 1;          // Fixed Voltage Reference Enable bit
0x00CD	0x0022      	MOVLB      2
0x00CE	0x1797      	BSF        FVRCON, 7
;WLS2.c,137 :: 		FVRCON.CDAFVR0 = 0;        // Fixed Voltage Reference Peripheral output is 2x (2.048V)
0x00CF	0x1117      	BCF        FVRCON, 2
;WLS2.c,138 :: 		FVRCON.CDAFVR1 = 1;        // Fixed Voltage Reference Peripheral output is 2x (2.048V)
0x00D0	0x1597      	BSF        FVRCON, 3
;WLS2.c,142 :: 		INTCON.GIE = 1;
0x00D1	0x178B      	BSF        INTCON, 7
;WLS2.c,145 :: 		}
L_end_init:
0x00D2	0x0008      	RETURN
; end of _init
_main:
;WLS2.c,152 :: 		void main()
;WLS2.c,156 :: 		init();
0x00D3	0x20A3      	CALL       _init
;WLS2.c,159 :: 		while(1)
L_main8:
;WLS2.c,162 :: 		frequency = measure_frequency();
0x00D4	0x2030      	CALL       _measure_frequency
0x00D5	0x0870      	MOVF       R0, 0
0x00D6	0x00A4      	MOVWF      WLS2_frequency
0x00D7	0x0871      	MOVF       R1, 0
0x00D8	0x00A5      	MOVWF      WLS2_frequency+1
0x00D9	0x0872      	MOVF       R2, 0
0x00DA	0x00A6      	MOVWF      WLS2_frequency+2
0x00DB	0x0873      	MOVF       R3, 0
0x00DC	0x00A7      	MOVWF      WLS2_frequency+3
;WLS2.c,165 :: 		sendhex(frequency);
0x00DD	0x0870      	MOVF       R0, 0
0x00DE	0x00A8      	MOVWF      FARG_sendhex_hexnumber
0x00DF	0x0871      	MOVF       R1, 0
0x00E0	0x00A9      	MOVWF      FARG_sendhex_hexnumber+1
0x00E1	0x0872      	MOVF       R2, 0
0x00E2	0x00AA      	MOVWF      FARG_sendhex_hexnumber+2
0x00E3	0x0873      	MOVF       R3, 0
0x00E4	0x00AB      	MOVWF      FARG_sendhex_hexnumber+3
0x00E5	0x204C      	CALL       _sendhex
;WLS2.c,166 :: 		}
0x00E6	0x28D4      	GOTO       L_main8
;WLS2.c,167 :: 		}
L_end_main:
0x00E7	0x28E7      	GOTO       $+0
; end of _main
;WLS2.c,73 :: sendhex_hexnr_L0
0x00E8	0x3430 ;sendhex_hexnr_L0+0
0x00E9	0x3431 ;sendhex_hexnr_L0+1
0x00EA	0x3432 ;sendhex_hexnr_L0+2
0x00EB	0x3433 ;sendhex_hexnr_L0+3
0x00EC	0x3434 ;sendhex_hexnr_L0+4
0x00ED	0x3435 ;sendhex_hexnr_L0+5
0x00EE	0x3436 ;sendhex_hexnr_L0+6
0x00EF	0x3437 ;sendhex_hexnr_L0+7
0x00F0	0x3438 ;sendhex_hexnr_L0+8
0x00F1	0x3439 ;sendhex_hexnr_L0+9
0x00F2	0x3441 ;sendhex_hexnr_L0+10
0x00F3	0x3442 ;sendhex_hexnr_L0+11
0x00F4	0x3443 ;sendhex_hexnr_L0+12
0x00F5	0x3444 ;sendhex_hexnr_L0+13
0x00F6	0x3445 ;sendhex_hexnr_L0+14
0x00F7	0x3446 ;sendhex_hexnr_L0+15
; end of sendhex_hexnr_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [13]    _interrupt
0x0011      [10]    _UART1_Write
0x001B       [6]    _UART1_Tx_Idle
0x0021      [15]    _sendchar
0x0030      [28]    _measure_frequency
0x004C      [78]    _sendhex
0x009A       [9]    ___CC2DW
0x00A3      [48]    _init
0x00D3      [21]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PORTA
0x0012       [1]    PIR2
0x0020       [4]    WLS2_actual_nr_pulses
0x0024       [4]    WLS2_frequency
0x0028       [4]    FARG_sendhex_hexnumber
0x002C       [2]    sendhex_nibble_L0
0x002E       [1]    FARG_sendchar_c
0x002F       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008C       [1]    TRISA
0x0092       [1]    PIE2
0x0099       [1]    OSCCON
0x0111       [1]    CM1CON0
0x0112       [1]    CM1CON1
0x0117       [1]    FVRCON
0x018C       [1]    ANSELA
0x019A       [1]    TXREG
0x019E       [1]    TXSTA
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x00E8      [16]    sendhex_hexnr_L0
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_sendchar1
  L_sendchar2
  L_sendchar3
  L_sendhex4
  L_sendhex5
  L_sendhex6
  L_measure_frequency7
  L_main8
  L_main9
  L_end_interrupt
  _interrupt
  L__interrupt11
  L_end_sendchar
  _sendchar
  L_end_sendhex
  _sendhex
  L__sendhex14
  L__sendhex15
  L__sendhex16
  L__sendhex17
  L__sendhex18
  L_end_measure_frequency
  _measure_frequency
  L_end_init
  _init
  L_end_main
  _main
  L_CA2A_Loop
  L_CA2AW_Loop
  L_CS2S_Loop
  L_CS2S_End
  L_FZinS_Loop
  L_FZinS_End
  _CC2D_Loop1
  _CC2DL_Loop1
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2A
  ___CA2A
  L_end___CA2AW
  ___CA2AW
  L_end___CS2S
  ___CS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_interrupt0
  L_sendchar1
  L_sendchar2
  L_sendchar3
  L_sendhex4
  L_sendhex5
  L_sendhex6
  L_measure_frequency7
  L_main8
  L_main9
  L_end_interrupt
  _interrupt
  L__interrupt11
  L_end_sendchar
  _sendchar
  L_end_sendhex
  _sendhex
  L__sendhex14
  L__sendhex15
  L__sendhex16
  L__sendhex17
  L__sendhex18
  L_end_measure_frequency
  _measure_frequency
  L_end_init
  _init
  L_end_main
  _main
